# Docker Schema ref: https://github.com/aanand/compose-file/blob/master/schema/data/config_schema_v3.0.json
# Difference: https://docs.docker.com/compose/compose-file/compose-versioning/#version-21
# How-to swarm cluster: https://codefresh.io/blog/deploy-docker-compose-v3-swarm-mode-cluster/

version: '3'
volumes:
  data-mongo:
  data-prometheus:
  data-grafana:
  data-logging:
  data-elasticsearch:
  data-rabbitmq:
  data-portainer:

services:

  discovery-service:
    image: dclou/platform-discovery-service:latest
    depends_on: # https://docs.docker.com/compose/startup-order/
      - rabbit-mon
    environment:
      JAVA_MEM: "-Xms250m -Xmx720m -XX:CompressedClassSpaceSize=300m -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:-TieredCompilation -Xss256k -XX:+UseG1GC -XX:+UseStringDeduplication"
      JAVA_EXT: "-Djava.security.egd=file:/dev/./urandom"
    ports:
      - "8761:8761"

  config-service:
    image: dclou/platform-config-service:latest
    depends_on:
      - fluentd
    environment:
      JAVA_MEM: "-Xms250m -Xmx512m -XX:CompressedClassSpaceSize=300m -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:-TieredCompilation -Xss256k -XX:+UseG1GC -XX:+UseStringDeduplication"
      JAVA_EXT: "-Djava.security.egd=file:/dev/./urandom"
    ports:
      - "8888:8888"

  portainer:
    image: portainer/portainer
    deploy:
      placement:
        constraints:
          - node.role == manager
    volumes:
      - 'data-portainer:/data'
    ports:
      - "9000:9000"

  rabbit-mon:
    image: rabbitmq:alpine
    hostname: rabbit-mon
    volumes:
     - data-rabbitmq:/optc
    environment:
     #- TZ=Europe/Moscow
     - RABBITMQ_DEFAULT_USER=admin
     - RABBITMQ_DEFAULT_PASS=admin
     - RABBITMQ_DEFAULT_VHOST=rabbit-mon

#  db:
#    image: mongo
#    volumes:
#      - data-mongo:/data/db

  prometheus:
   image: dclou/platform-prometheus:latest
   volumes:
     - data-prometheus:/prometheus

  grafana:
   image: grafana/grafana
   volumes:
     - data-grafana:/var/lib/grafana
   ports:
     - "3000:3000"

  fluentd:
    image: dclou/platform-fluentd:latest
    volumes:
      - data-logging:/fluentd/log

  elasticsearch:
    image: elasticsearch:latest
    volumes:
       - data-elasticsearch:/usr/share/elasticsearch/config
    environment:
       ES_JAVA_OPTS: "-Xmx1024m -Xms256m"
    ports:
       - "9200:9200"
       - "9300:9300"

  kibana:
    image: dclou/platform-kibana:latest
    volumes:
      - data-kibana:/usr/share/kibana/config
    deploy:
      placement:
        constraints:
          - node.role == manager
    environment:
          - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
