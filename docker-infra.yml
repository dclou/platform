# Docker Schema ref: https://github.com/aanand/compose-file/blob/master/schema/data/config_schema_v3.0.json
# Difference: https://docs.docker.com/compose/compose-file/compose-versioning/#version-21
# How-to swarm cluster: https://codefresh.io/blog/deploy-docker-compose-v3-swarm-mode-cluster/

version: '3'
volumes:
  data-mongo:
  data-prometheus:
  data-grafana:
  data-logging:
  data-elasticsearch:
  data-rabbitmq:
  data-portainer:
  data-kibana:

services:

  discovery-service:
    image: dclou/platform-discovery-service:latest
    depends_on: # https://docs.docker.com/compose/startup-order/
      - rabbit-mon
    environment:
      JAVA_MEM: "-Xms250m -Xmx720m -XX:CompressedClassSpaceSize=300m -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:-TieredCompilation -Xss256k -XX:+UseG1GC -XX:+UseStringDeduplication"
      JAVA_EXT: "-Djava.security.egd=file:/dev/./urandom"
    ports:
      - "8761:8761"

  config-service:
    image: dclou/platform-config-service:latest
    depends_on:
      - fluentd
    environment:
      JAVA_MEM: "-Xms250m -Xmx512m -XX:CompressedClassSpaceSize=300m -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:-TieredCompilation -Xss256k -XX:+UseG1GC -XX:+UseStringDeduplication"
      JAVA_EXT: "-Djava.security.egd=file:/dev/./urandom"
    ports:
      - "8888:8888"

  portainer:
    image: portainer/portainer
    deploy:
      placement:
        constraints:
          - node.role == manager
    volumes:
      - 'data-portainer:/data'
    ports:
      - "9000:9000"

  rabbit-mon:
    image: rabbitmq:alpine
    hostname: rabbit-mon
    volumes:
     - data-rabbitmq:/optc
    environment:
     #- TZ=Europe/Moscow
     - RABBITMQ_DEFAULT_USER=admin
     - RABBITMQ_DEFAULT_PASS=admin
     - RABBITMQ_DEFAULT_VHOST=rabbit-mon

####### MONITORING SECTION #######
  prometheus:
    image: dclou/platform-prometheus:latest
    labels:
      org.label-schema.group: "monitoring"
    volumes:
      - ./docker-common/prometheus/:/etc/prometheus/
      - data-prometheus:/prometheus
    command:
      - '-config.file=/etc/prometheus/prometheus.yml'
      - '-storage.local.path=/prometheus'
      - '-alertmanager.url=http://alertmanager:9093'
    expose:
      - 9090
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor

  node-exporter:
    image: prom/node-exporter
    labels:
      org.label-schema.group: "monitoring"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: '-collector.procfs=/host/proc -collector.sysfs=/host/sys -collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)" collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
    expose:
      - 9100

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./docker-common/prometheus/alertmanager/:/etc/alertmanager/
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    expose:
      - 8080


  grafana:
    image: dclou/platform-grafana:latest
    labels:
      org.label-schema.group: "monitoring"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - data-grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=foobar
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-simple-json-datasource,cloudflare-app


  fluentd:
    image: dclou/platform-fluentd:latest
    volumes:
      - data-logging:/fluentd/log

  elasticsearch:
    labels:
      org.label-schema.group: "monitoring"
    image: dclou/platform-elasticsearch:latest
    volumes:
       - ./docker-common/elasticsearch/:/usr/share/elasticsearch/config
       - data-elasticsearch:/usr/share/elasticsearch/config
    ports:
       - "9200:9200"
       - "9300:9300"
    deploy:
      placement:
        constraints:
          - node.role == manager

  kibana:
    image: dclou/platform-kibana:latest
    volumes:
      - data-kibana:/usr/share/kibana/config
    deploy:
      placement:
        constraints:
          - node.role == manager
    environment:
          - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
