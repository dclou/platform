<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.dclou</groupId>
  <artifactId>platform</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>platform</name>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.5.3.RELEASE</version>
  </parent>

  <modules>
    <module>docker-common</module>
    <module>admin-service</module>
    <module>auth-service</module>
    <module>config-service</module>
    <module>discovery-service</module>
    <module>gateway-service</module>
    <module>zipkin-service</module>
  </modules>

  <properties>
    <docker.image.prefix>platform</docker.image.prefix>
    <docker.image.group>dclou</docker.image.group>
    <docker.image.version>1.0</docker.image.version>

    <java.version>1.8</java.version>

    <spring-cloud-dependencies.version>Dalston.SR1</spring-cloud-dependencies.version>

    <docker-maven-plugin.version>0.4.14</docker-maven-plugin.version>

    <spring-boot-admin.version>1.5.0</spring-boot-admin.version>

    <fluent-logger.version>0.3.2</fluent-logger.version>
    <logback-more-appenders.version>1.4.2</logback-more-appenders.version>
  </properties>

  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Alexander Tumin</name>
      <email>iamtakingiteasy@eientei.org</email>
      <organization>Private</organization>
      <organizationUrl>http://github.com/iamtakingiteasy</organizationUrl>
    </developer>
    <developer>
      <name>Tartanov Mikhail</name>
      <email>tartanov.mike@gmail.com</email>
      <organization>Technosoft</organization>
      <organizationUrl>http://www.tsft.ru</organizationUrl>
    </developer>
    <developer>
      <name>Artem Vilkov</name>
      <email>zotona@gmail.com</email>
      <organization>Technosoft</organization>
      <organizationUrl>http://www.tsft.ru</organizationUrl>
    </developer>
    <developer>
      <name>Alexander Podoplelov</name>
      <email>alepod@gmail.com</email>
      <organization>Technosoft</organization>
      <organizationUrl>http://www.tsft.ru</organizationUrl>
    </developer>
    <developer>
      <name>Maxim Nikitin</name>
      <email>msnikitin@tsft.ru</email>
      <organization>Technosoft</organization>
      <organizationUrl>http://www.tsft.ru</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/dclou/platform.git</connection>
    <developerConnection>scm:git:ssh://github.com:dclou/platform.git</developerConnection>
    <url>http://github.com/dclou/platform/tree/master</url>
  </scm>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <profiles>
    <profile>
      <id>docker_deploy</id>
      <activation>
        <property>
          <name>deployDocker</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>com.spotify</groupId>
              <artifactId>docker-maven-plugin</artifactId>
              <version>${docker-maven-plugin.version}</version>
              <executions>
                <execution>
                  <id>default</id>
                  <phase>package</phase>
                  <goals>
                    <goal>push</goal>
                  </goals>
                </execution>
              </executions>
              <configuration>
                <imageName>realiaio/priv</imageName>
                <imageTags>
                  <imageTag>${project.name}-${project.version}-${docker.image.version}</imageTag>
                </imageTags>
                <serverId>docker-hub</serverId>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>deploy</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <phase>deploy</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>1.6</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>deploy</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <keyname>${gpg.keyname}</keyname>
          <passphraseServerId>${gpg.keyname}</passphraseServerId>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.7</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.spotify</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>${docker-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>default</id>
              <phase>package</phase>
              <goals>
                <goal>build</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <dockerDirectory>${project.basedir}</dockerDirectory>
            <!--<imageName>${docker.image.group}/${docker.image.prefix}-${project.name}</imageName>-->
            <imageName>${project.name}</imageName>
            <imageTags>
              <imageTag>${project.version}</imageTag>
              <imageTag>${docker.image.version}</imageTag>
            </imageTags>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud-dependencies.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-server</artifactId>
        <version>${spring-boot-admin.version}</version>
      </dependency>
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-server-ui</artifactId>
        <version>${spring-boot-admin.version}</version>
      </dependency>
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-server-ui-hystrix</artifactId>
        <version>${spring-boot-admin.version}</version>
      </dependency>
      <dependency>
        <groupId>de.codecentric</groupId>
        <artifactId>spring-boot-admin-server-ui-turbine</artifactId>
        <version>${spring-boot-admin.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-eureka</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-hystrix</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-config</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <dependency>
      <groupId>org.fluentd</groupId>
      <artifactId>fluent-logger</artifactId>
      <version>${fluent-logger.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sndyuk</groupId>
      <artifactId>logback-more-appenders</artifactId>
      <version>${logback-more-appenders.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
